---
name: Setup Rust
description: Setup Rust toolchain and Shipyard registry access
branding:
  icon: package
  color: purple

inputs:
  ssh-private-key:
    description: PEM-encoded SSH private key for pulling the Shipyard registry index
    required: true
  token:
    description: Token for pushing to/pulling from the Shipyard registry
    required: true
  registry:
    description: The name of the registry as it appears in the Cargo.toml file
    required: false
    default: wafflehacks
  toolchain:
    description: Rust toolchain specification -- see https://rust-lang.github.io/rustup/concepts/toolchains.html#toolchain-specification
    required: false
    default: stable
  components:
    description: Comma-separated list of components to be additionally installed
    required: false
  with-mold:
    description: Whether to install the mold linker
    required: false
    default: true
  mold-version:
    description: Version of the mold linker to install
    required: false
    default: "2.31.0"

runs:
  using: composite
  steps:
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ inputs.toolchain }}
        components: ${{ inputs.components }}

    - uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ inputs.ssh-private-key }}

    - name: Add Shipyard host key to .ssh/known_hosts
      shell: bash
      run: |
        mkdir -p ~/.ssh
        touch ~/.ssh/known_hosts
        ssh-keyscan ssh.shipyard.rs >> ~/.ssh/known_hosts

    - name: Login to Shipyard registry
      shell: bash
      run: cargo login --registry ${{ inputs.registry }} ${{ inputs.token }}

    - name: Set Cargo environment variables
      shell: bash
      run: |
        echo "CARGO_NET_GIT_FETCH_WITH_CLI=true" >> $GITHUB_ENV
        echo "CARGO_REGISTRY_GLOBAL_CREDENTIAL_PROVIDERS=cargo:token" >> $GITHUB_ENV

    - name: Install mold linker
      shell: bash
      if: inputs.with-mold == 'true'
      run: |
        wget -qO /tmp/mold.tar.gz https://github.com/rui314/mold/releases/download/v${{ inputs.mold-version }}/mold-${{ inputs.mold-version }}-x86_64-linux.tar.gz; \
        sudo tar -xf /tmp/mold.tar.gz -C /usr/local --strip-components 1; \
        rm /tmp/mold.tar.gz

    - name: Install clang
      shell: bash
      if: inputs.with-mold == 'true'
      run: sudo apt-get install -y clang libclang-dev
